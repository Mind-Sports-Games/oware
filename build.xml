<?xml version="1.0"?>

<!--
 * Aalina oware engine.
 * Copyright (c) 2014-2021 Joan Sala Soler <contact@joansala.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 -->

<project name="Aalina" default="dist" basedir=".">

    <property name="version" value="1.2"/>
    <property name="vendor" value="Joan Sala Soler"/>

    <property name="src.dir" location="src"/>
    <property name="res.dir" location="res"/>
    <property name="build.dir" location="build"/>
    <property name="dist.dir" location="dist"/>
    <property name="lib.dir" location="lib"/>

    <path id="compile.libs">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <path id="run.libs">
        <pathelement path="${dist.dir}/lib/${ant.project.name}.jar"/>
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${lib.dir}"/>
    </target>

    <target name="manifest" depends="init">
        <mkdir dir="${build.dir}/META-INF"/>
        <manifest file="${build.dir}/META-INF/MANIFEST.MF">
            <attribute name="Main-Class" value="com.joansala.oware.OwareService"/>
            <attribute name="Class-Path" value="."/>
            <section name="com/joansala/engine/">
                <attribute name="Specification-Title" value="Game Engine"/>
                <attribute name="Specification-Version" value="${version}"/>
                <attribute name="Specification-Vendor" value="${vendor}"/>
                <attribute name="Implementation-Title" value="Game Engine"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Implementation-Vendor" value="${vendor}"/>
            </section>
            <section name="com/joansala/oware/">
                <attribute name="Specification-Title" value="Oware Game"/>
                <attribute name="Specification-Version" value="${version}"/>
                <attribute name="Specification-Vendor" value="${vendor}"/>
                <attribute name="Implementation-Title" value="Aalina Abapa"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Implementation-Vendor" value="${vendor}"/>
            </section>
            <section name="com/joansala/tools/">
                <attribute name="Specification-Title" value="Aalina's toolset"/>
                <attribute name="Specification-Version" value="${version}"/>
                <attribute name="Specification-Vendor" value="${vendor}"/>
                <attribute name="Implementation-Title" value="Aalina's toolset"/>
                <attribute name="Implementation-Version" value="${version}"/>
                <attribute name="Implementation-Vendor" value="${vendor}"/>
            </section>
        </manifest>
    </target>

    <target name="run" depends="dist">
        <echo message="Running oware engine in UCI protocol mode"/>
        <java classname="com.joansala.oware.OwareService" classpathref="run.libs" spawn="false"/>
    </target>

    <target name="benchmark" depends="dist">
        <echo message="Running default oware benchmark"/>
        <java classname="com.joansala.tools.Benchmark" classpathref="run.libs" spawn="false">
            <arg file="${res.dir}/benchmark.suite"/>
        </java>
    </target>

    <target name="match" depends="dist">
        <echo message="Running an oware match"/>
        <java classname="com.joansala.oware.OwareMatch" classpathref="run.libs" spawn="false">
            <arg line="java -jar ${dist.dir}/lib/${ant.project.name}.jar"/>
        </java>
    </target>

    <target name="train" depends="dist">
        <echo message="Running oware openings book trainer"/>
        <java classname="com.joansala.tools.Trainer" classpathref="run.libs" fork="true">
            <jvmarg value="-Xms1024M"/>
        </java>
    </target>

    <target name="solve" depends="dist">
        <echo message="Running oware endgames solver"/>
        <java classname="com.joansala.tools.Solver" classpathref="run.libs" fork="true">
            <jvmarg value="-Xms1024M"/>
        </java>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="compile" depends="init">
        <javac debug="true" srcdir="${src.dir}" destdir="${build.dir}" classpathref="compile.libs" includeantruntime="false"/>
    </target>

    <target name="dist" depends="compile,manifest">
        <mkdir dir="${dist.dir}/lib"/>
        <jar jarfile="${dist.dir}/lib/${ant.project.name}.jar" manifest="${build.dir}/META-INF/MANIFEST.MF" basedir="${build.dir}"/>
        <copy file="${res.dir}/oware-book.bin" todir="${dist.dir}/lib/"/>
        <copy file="${res.dir}/oware-leaves.bin" todir="${dist.dir}/lib/"/>
    </target>

    <target name="doc" depends="init">
        <mkdir dir="${dist.dir}/doc"/>
        <javadoc sourcepath="${src.dir}" destdir="${dist.dir}/doc/"
                 classpathref="compile.libs" charset="utf-8"
                 Windowtitle="Game Engine Documentation"/>
    </target>
</project>
